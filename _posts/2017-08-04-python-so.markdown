---
layout: post
title:  "Stackoverflow timepass python"
date:   2017-08-04 17:40:46 +0900
categories: pyhton, so
---

# Python 
## Stackoverflow
### Arrays

1) CQS ( Command Query Seperation)  
    actual execution only commands  
    query commands   
    are different  
    [Reference](https://stackoverflow.com/questions/1682567/why-does-list-append-evaluate-to-false)

    that is why 
    u = [] 
    u.append(6) => returns "None"

    Pragmatic(realistic) way, rather than theory way.

2) list append vs extend  
    [Reference](http://www.thomas-cokelaer.info/tutorials/python/lists.html)  


```python
    >>> stack = ['a','b']
    >>> stack.append('c')
    >>> stack
    ['a', 'b', 'c']
    >>> stack.append(['d', 'e', 'f'])
    >>> stack
    ['a', 'b', 'c', ['d', 'e', 'f']]

    >>> stack = ['a', 'b', 'c']
    >>> stack.extend(['d', 'e','f'])
    >>> stack
    ['a', 'b', 'c', 'd', 'e', 'f']
```

3) find index in a list  
    
```python    
    1) method1: 
    li = ['foo', 'bar', 'fun', 'bar']
    li.index('bar') -> will return 1 only

    2) method2: 
    for idx, val in enumerate(li):
        if val == 'bar':
            print idx
    
    --> will return 
    1
    3
```

4) increment a val in loop
    [Reference](https://stackoverflow.com/questions/22075824/how-can-i-increment-array-with-loop)

```python
    listOne = ['33.325556', '59.8149016457', '51.1289412359']  
    listOne = [float(x) + 1 for x in listOne]  
```

5) print: avoid new line:  
    by putting , at the end of put  
    
```python    
    for example : put "data", 
    (or)
    import sys
    sys.out.write("data")
```

file opening  

```python
#method1
    with open("abcd.txt", "r") as raw_file:
        for raw_row in raw_file:
            print raw_row, # note the , at the end of line.
#method2(best)
    with open("abcd.txt", "r") as raw_file:
        lines = raw_file.read()
        print lines
```


6) Execution time:

```python
import timeit  
stime = timeit.default_timer()  
etime = timeit.default_timer()  
exetime = etime - stime
print exetime
```